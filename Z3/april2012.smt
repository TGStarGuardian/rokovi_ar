(set-logic QF_BV)
(declare-fun p0 () (_ BitVec 1))
(declare-fun p1 () (_ BitVec 1))
(declare-fun p2 () (_ BitVec 1))
(declare-fun p3 () (_ BitVec 1))
(declare-fun p4 () (_ BitVec 1))
(declare-fun q0 () (_ BitVec 1))
(declare-fun q1 () (_ BitVec 1))
(declare-fun q2 () (_ BitVec 1))
(declare-fun q3 () (_ BitVec 1))
(declare-fun q4 () (_ BitVec 1))
(declare-fun r0 () (_ BitVec 1))
(declare-fun r1 () (_ BitVec 1))
(declare-fun r2 () (_ BitVec 1))
(declare-fun r3 () (_ BitVec 1))
(declare-fun r4 () (_ BitVec 1))
(declare-fun s0 () (_ BitVec 1))
(declare-fun s1 () (_ BitVec 1))
(declare-fun s2 () (_ BitVec 1))
(declare-fun s3 () (_ BitVec 1))
(declare-fun s4 () (_ BitVec 1))

(assert (and 
	(= p4 #b1)
	(= q4 #b0)
	(= r4 #b1)
	(= s4 #b0)
	(= p4 (bvxor r3 s3))
	(= p3 (bvxor r2 s2))
	(= p2 (bvxor r1 s1))
	(= p1 (bvxor r0 s0))
	(= q4 p3)
	(= q3 p2)
	(= q2 p1)
	(= q1 p0)
	(= s4 r3)
	(= s3 r2)
	(= s2 r1)
	(= s1 r0)
	(= r4 q3)
	(= r3 q2)
	(= r2 q1)
	(= r1 q0)
	)
)

(check-sat)
(get-value (p0 q0 r0 s0))
(exit)
