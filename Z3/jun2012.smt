(set-logic QF_ALIA)
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(declare-fun i9 () Int)
(declare-fun S () Int)
(declare-fun S0 () Int)
(declare-fun S1 () Int)
(declare-fun S2 () Int)
(declare-fun S3 () Int)
(declare-fun S4 () Int)
(declare-fun S5 () Int)
(declare-fun S6 () Int)
(declare-fun S7 () Int)
(declare-fun S8 () Int)
(declare-fun S9 () Int)
(declare-fun a () (Array Int Int))
(assert (and
	
	(= S 0)
	(= i1 (+ i0 1))
	(= i2 (+ i1 1))
	(= i3 (+ i2 1))
	(= i4 (+ i3 1))
	(= i5 (+ i4 1))
	(= i6 (+ i5 1))
	(= i7 (+ i6 1))
	(= i8 (+ i7 1))
	(= i9 (+ i8 1))
	(= S0 (+ S (select a i0)))
	(= S1 (+ S0 (select a i1)))
	(= S2 (+ S1 (select a i2)))
	(= S3 (+ S2 (select a i3)))
	(= S4 (+ S3 (select a i4)))
	(= S5 (+ S4 (select a i5)))
	(= S6 (+ S5 (select a i6)))
	(= S7 (+ S6 (select a i7)))
	(= S8 (+ S7 (select a i8)))
	(= S9 (+ S8 (select a i9)))
	
	(not
	(=
	S9
	(+
		(select a i0)
		(select a i1)
		(select a i2)
		(select a i3)
		(select a i4)
		(select a i5)
		(select a i6)
		(select a i7)
		(select a i8)
		(select a i9)	
	)))
	
	)

)

(check-sat)
(exit)
