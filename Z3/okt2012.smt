(set-logic QF_LIA)
; dame - Q ispred, jer Queen
(declare-const qx1 Int)
(declare-const qx2 Int)
(declare-const qx3 Int)
(declare-const qx4 Int)
(declare-const qy1 Int)
(declare-const qy2 Int)
(declare-const qy3 Int)
(declare-const qy4 Int)
; skakaci - N ispred, jer N je oznaka za skakaca u engleskom
; K je king, tj. kralj, pa zato N za knight
(declare-const nx1 Int)
(declare-const nx2 Int)
(declare-const nx3 Int)
(declare-const nx4 Int)
(declare-const ny1 Int)
(declare-const ny2 Int)
(declare-const ny3 Int)
(declare-const ny4 Int)
(define-fun distinct_pairs ((x1 Int) (y1 Int) (x2 Int) (y2 Int)) Bool
	; negacija od toga da su oba ista
	(not (and (= x1 x2) (= y1 y2)))
)


(assert
	(and
		(<= 1 qx1 8)
		(<= 1 qx2 8)
		(<= 1 qx3 8)
		(<= 1 qx4 8)
		(<= 1 qy1 8)
		(<= 1 qy2 8)
		(<= 1 qy3 8)
		(<= 1 qy4 8)
		(<= 1 nx1 8)
		(<= 1 nx2 8)
		(<= 1 nx3 8)
		(<= 1 nx4 8)
		(<= 1 ny1 8)
		(<= 1 ny2 8)
		(<= 1 ny3 8)
		(<= 1 ny4 8)
		; dame ne napadaju nikoga na liniji
		(distinct qx1 qx2 qx3 qx4)
		(distinct qy1 qy2 qy3 qy4)
		; dame ne napadaju konje na liniji
		(distinct qx1 qx2 qx3 qx4 nx1)
		(distinct qy1 qy2 qy3 qy4 ny1)
		(distinct qx1 qx2 qx3 qx4 nx2)
		(distinct qy1 qy2 qy3 qy4 ny2)
		(distinct qx1 qx2 qx3 qx4 nx2)
		(distinct qy1 qy2 qy3 qy4 ny2)
		(distinct qx1 qx2 qx3 qx4 nx3)
		(distinct qy1 qy2 qy3 qy4 ny3)
		(distinct qx1 qx2 qx3 qx4 nx4)
		(distinct qy1 qy2 qy3 qy4 ny4)
		; dame se ne napadaju na dijagonali
		(distinct (- qx1 qy1) (- qx2 qy2) (- qx3 qy3) (- qx4 qy4))
		(distinct (+ qx1 qy1) (+ qx2 qy2) (+ qx3 qy3) (+ qx4 qy4))
		; dame ne napadaju konje na dijagonali
		; dama napada konja akko vazi nesto od sledeceg:
		; qx - qy == nx - ny
		; qx + qy == nx + ny
		; znaci, samo treba imati izraz za svakog konja
		; da se ovo razlikuje od svih sa damama...
		(distinct (- qx1 qy1) (- qx2 qy2) (- qx3 qy3) (- qx4 qy4) (- nx1 ny1))
		(distinct (+ qx1 qy1) (+ qx2 qy2) (+ qx3 qy3) (+ qx4 qy4) (+ nx1 ny1))
		(distinct (+ qx1 qy1) (+ qx2 qy2) (+ qx3 qy3) (+ qx4 qy4) (+ nx2 ny2))
		(distinct (- qx1 qy1) (- qx2 qy2) (- qx3 qy3) (- qx4 qy4) (- nx2 ny2))
		(distinct (- qx1 qy1) (- qx2 qy2) (- qx3 qy3) (- qx4 qy4) (- nx3 ny3))
		(distinct (+ qx1 qy1) (+ qx2 qy2) (+ qx3 qy3) (+ qx4 qy4) (+ nx3 ny3))
		(distinct (- qx1 qy1) (- qx2 qy2) (- qx3 qy3) (- qx4 qy4) (- nx4 ny4))
		(distinct (+ qx1 qy1) (+ qx2 qy2) (+ qx3 qy3) (+ qx4 qy4) (+ nx4 ny4))
		
		; konji ne napadaju ni dame ni konje
		; konj moze napadati max 8 polja
		; koordinate koje napada su (nx + 1, ny + 2), (nx + 1, ny - 2)
		; (nx - 1, ny + 2), (nx - 1, ny - 2), (nx + 2, ny + 1), (nx + 2, ny - 1)
		; (nx - 2, ny + 1), (nx - 2, ny - 1)
		; nijedna druga figura ne sme biti na tim poljima
		; jedino imamo granicne slucajeve kada su ta polja izvan table
		; medjutim, to nije problem, jer ako je neka figura ogranicena na tablu 8x8
		; onda su joj koordinate svakako razlicite od ovih sto izlaze izvan table
		; znaci, u paru moraju biti razlicite ove koordinate
		; znaci, za svakog od 4 konja, moramo proveriti za 7 ostalih figura da li ih napada
		; a to se radi tako sto se vidi da li je ta figura na jednom od onih 8 polja
		; svaki konj proverava da li je u dometu drugog konja
		; to radi tako sto proveri da li je na nekom od 24 napadnuta polja
		; 4 konja * 24 polja = 96 provera...
		; svaka dama mora da proveri svako od 32 polja
		; 4 dame * 32 polja = 128 provera
		; ma ko je lud da pise 200 linija koda za ovo...
		
		(distinct_pairs (+ nx2 1) (+ ny2 2) nx1 ny1)
(distinct_pairs (+ nx2 1) (- ny2 2) nx1 ny1)
(distinct_pairs (- nx2 1) (+ ny2 2) nx1 ny1)
(distinct_pairs (- nx2 1) (- ny2 2) nx1 ny1)
(distinct_pairs (+ nx2 2) (+ ny2 1) nx1 ny1)
(distinct_pairs (+ nx2 2) (- ny2 1) nx1 ny1)
(distinct_pairs (- nx2 2) (+ ny2 1) nx1 ny1)
(distinct_pairs (- nx2 2) (- ny2 1) nx1 ny1)
(distinct_pairs nx2  ny2  nx1 ny1)
(distinct_pairs (+ nx3 1) (+ ny3 2) nx1 ny1)
(distinct_pairs (+ nx3 1) (- ny3 2) nx1 ny1)
(distinct_pairs (- nx3 1) (+ ny3 2) nx1 ny1)
(distinct_pairs (- nx3 1) (- ny3 2) nx1 ny1)
(distinct_pairs (+ nx3 2) (+ ny3 1) nx1 ny1)
(distinct_pairs (+ nx3 2) (- ny3 1) nx1 ny1)
(distinct_pairs (- nx3 2) (+ ny3 1) nx1 ny1)
(distinct_pairs (- nx3 2) (- ny3 1) nx1 ny1)
(distinct_pairs nx3  ny3  nx1 ny1)
(distinct_pairs (+ nx4 1) (+ ny4 2) nx1 ny1)
(distinct_pairs (+ nx4 1) (- ny4 2) nx1 ny1)
(distinct_pairs (- nx4 1) (+ ny4 2) nx1 ny1)
(distinct_pairs (- nx4 1) (- ny4 2) nx1 ny1)
(distinct_pairs (+ nx4 2) (+ ny4 1) nx1 ny1)
(distinct_pairs (+ nx4 2) (- ny4 1) nx1 ny1)
(distinct_pairs (- nx4 2) (+ ny4 1) nx1 ny1)
(distinct_pairs (- nx4 2) (- ny4 1) nx1 ny1)
(distinct_pairs nx4  ny4  nx1 ny1)
(distinct_pairs (+ nx3 1) (+ ny3 2) nx2 ny2)
(distinct_pairs (+ nx3 1) (- ny3 2) nx2 ny2)
(distinct_pairs (- nx3 1) (+ ny3 2) nx2 ny2)
(distinct_pairs (- nx3 1) (- ny3 2) nx2 ny2)
(distinct_pairs (+ nx3 2) (+ ny3 1) nx2 ny2)
(distinct_pairs (+ nx3 2) (- ny3 1) nx2 ny2)
(distinct_pairs (- nx3 2) (+ ny3 1) nx2 ny2)
(distinct_pairs (- nx3 2) (- ny3 1) nx2 ny2)
(distinct_pairs nx3  ny3  nx2 ny2)
(distinct_pairs (+ nx4 1) (+ ny4 2) nx2 ny2)
(distinct_pairs (+ nx4 1) (- ny4 2) nx2 ny2)
(distinct_pairs (- nx4 1) (+ ny4 2) nx2 ny2)
(distinct_pairs (- nx4 1) (- ny4 2) nx2 ny2)
(distinct_pairs (+ nx4 2) (+ ny4 1) nx2 ny2)
(distinct_pairs (+ nx4 2) (- ny4 1) nx2 ny2)
(distinct_pairs (- nx4 2) (+ ny4 1) nx2 ny2)
(distinct_pairs (- nx4 2) (- ny4 1) nx2 ny2)
(distinct_pairs nx4  ny4  nx2 ny2)
(distinct_pairs (+ nx4 1) (+ ny4 2) nx3 ny3)
(distinct_pairs (+ nx4 1) (- ny4 2) nx3 ny3)
(distinct_pairs (- nx4 1) (+ ny4 2) nx3 ny3)
(distinct_pairs (- nx4 1) (- ny4 2) nx3 ny3)
(distinct_pairs (+ nx4 2) (+ ny4 1) nx3 ny3)
(distinct_pairs (+ nx4 2) (- ny4 1) nx3 ny3)
(distinct_pairs (- nx4 2) (+ ny4 1) nx3 ny3)
(distinct_pairs (- nx4 2) (- ny4 1) nx3 ny3)
(distinct_pairs nx4  ny4  nx3 ny3)
(distinct_pairs (+ nx1 1) (+ ny1 2) qx1 qy1)
(distinct_pairs (+ nx1 1) (- ny1 2) qx1 qy1)
(distinct_pairs (- nx1 1) (+ ny1 2) qx1 qy1)
(distinct_pairs (- nx1 1) (- ny1 2) qx1 qy1)
(distinct_pairs (+ nx1 2) (+ ny1 1) qx1 qy1)
(distinct_pairs (+ nx1 2) (- ny1 1) qx1 qy1)
(distinct_pairs (- nx1 2) (+ ny1 1) qx1 qy1)
(distinct_pairs (- nx1 2) (- ny1 1) qx1 qy1)
(distinct_pairs (+ nx2 1) (+ ny2 2) qx1 qy1)
(distinct_pairs (+ nx2 1) (- ny2 2) qx1 qy1)
(distinct_pairs (- nx2 1) (+ ny2 2) qx1 qy1)
(distinct_pairs (- nx2 1) (- ny2 2) qx1 qy1)
(distinct_pairs (+ nx2 2) (+ ny2 1) qx1 qy1)
(distinct_pairs (+ nx2 2) (- ny2 1) qx1 qy1)
(distinct_pairs (- nx2 2) (+ ny2 1) qx1 qy1)
(distinct_pairs (- nx2 2) (- ny2 1) qx1 qy1)
(distinct_pairs (+ nx3 1) (+ ny3 2) qx1 qy1)
(distinct_pairs (+ nx3 1) (- ny3 2) qx1 qy1)
(distinct_pairs (- nx3 1) (+ ny3 2) qx1 qy1)
(distinct_pairs (- nx3 1) (- ny3 2) qx1 qy1)
(distinct_pairs (+ nx3 2) (+ ny3 1) qx1 qy1)
(distinct_pairs (+ nx3 2) (- ny3 1) qx1 qy1)
(distinct_pairs (- nx3 2) (+ ny3 1) qx1 qy1)
(distinct_pairs (- nx3 2) (- ny3 1) qx1 qy1)
(distinct_pairs (+ nx4 1) (+ ny4 2) qx1 qy1)
(distinct_pairs (+ nx4 1) (- ny4 2) qx1 qy1)
(distinct_pairs (- nx4 1) (+ ny4 2) qx1 qy1)
(distinct_pairs (- nx4 1) (- ny4 2) qx1 qy1)
(distinct_pairs (+ nx4 2) (+ ny4 1) qx1 qy1)
(distinct_pairs (+ nx4 2) (- ny4 1) qx1 qy1)
(distinct_pairs (- nx4 2) (+ ny4 1) qx1 qy1)
(distinct_pairs (- nx4 2) (- ny4 1) qx1 qy1)
(distinct_pairs (+ nx1 1) (+ ny1 2) qx2 qy2)
(distinct_pairs (+ nx1 1) (- ny1 2) qx2 qy2)
(distinct_pairs (- nx1 1) (+ ny1 2) qx2 qy2)
(distinct_pairs (- nx1 1) (- ny1 2) qx2 qy2)
(distinct_pairs (+ nx1 2) (+ ny1 1) qx2 qy2)
(distinct_pairs (+ nx1 2) (- ny1 1) qx2 qy2)
(distinct_pairs (- nx1 2) (+ ny1 1) qx2 qy2)
(distinct_pairs (- nx1 2) (- ny1 1) qx2 qy2)
(distinct_pairs (+ nx2 1) (+ ny2 2) qx2 qy2)
(distinct_pairs (+ nx2 1) (- ny2 2) qx2 qy2)
(distinct_pairs (- nx2 1) (+ ny2 2) qx2 qy2)
(distinct_pairs (- nx2 1) (- ny2 2) qx2 qy2)
(distinct_pairs (+ nx2 2) (+ ny2 1) qx2 qy2)
(distinct_pairs (+ nx2 2) (- ny2 1) qx2 qy2)
(distinct_pairs (- nx2 2) (+ ny2 1) qx2 qy2)
(distinct_pairs (- nx2 2) (- ny2 1) qx2 qy2)
(distinct_pairs (+ nx3 1) (+ ny3 2) qx2 qy2)
(distinct_pairs (+ nx3 1) (- ny3 2) qx2 qy2)
(distinct_pairs (- nx3 1) (+ ny3 2) qx2 qy2)
(distinct_pairs (- nx3 1) (- ny3 2) qx2 qy2)
(distinct_pairs (+ nx3 2) (+ ny3 1) qx2 qy2)
(distinct_pairs (+ nx3 2) (- ny3 1) qx2 qy2)
(distinct_pairs (- nx3 2) (+ ny3 1) qx2 qy2)
(distinct_pairs (- nx3 2) (- ny3 1) qx2 qy2)
(distinct_pairs (+ nx4 1) (+ ny4 2) qx2 qy2)
(distinct_pairs (+ nx4 1) (- ny4 2) qx2 qy2)
(distinct_pairs (- nx4 1) (+ ny4 2) qx2 qy2)
(distinct_pairs (- nx4 1) (- ny4 2) qx2 qy2)
(distinct_pairs (+ nx4 2) (+ ny4 1) qx2 qy2)
(distinct_pairs (+ nx4 2) (- ny4 1) qx2 qy2)
(distinct_pairs (- nx4 2) (+ ny4 1) qx2 qy2)
(distinct_pairs (- nx4 2) (- ny4 1) qx2 qy2)
(distinct_pairs (+ nx1 1) (+ ny1 2) qx3 qy3)
(distinct_pairs (+ nx1 1) (- ny1 2) qx3 qy3)
(distinct_pairs (- nx1 1) (+ ny1 2) qx3 qy3)
(distinct_pairs (- nx1 1) (- ny1 2) qx3 qy3)
(distinct_pairs (+ nx1 2) (+ ny1 1) qx3 qy3)
(distinct_pairs (+ nx1 2) (- ny1 1) qx3 qy3)
(distinct_pairs (- nx1 2) (+ ny1 1) qx3 qy3)
(distinct_pairs (- nx1 2) (- ny1 1) qx3 qy3)
(distinct_pairs (+ nx2 1) (+ ny2 2) qx3 qy3)
(distinct_pairs (+ nx2 1) (- ny2 2) qx3 qy3)
(distinct_pairs (- nx2 1) (+ ny2 2) qx3 qy3)
(distinct_pairs (- nx2 1) (- ny2 2) qx3 qy3)
(distinct_pairs (+ nx2 2) (+ ny2 1) qx3 qy3)
(distinct_pairs (+ nx2 2) (- ny2 1) qx3 qy3)
(distinct_pairs (- nx2 2) (+ ny2 1) qx3 qy3)
(distinct_pairs (- nx2 2) (- ny2 1) qx3 qy3)
(distinct_pairs (+ nx3 1) (+ ny3 2) qx3 qy3)
(distinct_pairs (+ nx3 1) (- ny3 2) qx3 qy3)
(distinct_pairs (- nx3 1) (+ ny3 2) qx3 qy3)
(distinct_pairs (- nx3 1) (- ny3 2) qx3 qy3)
(distinct_pairs (+ nx3 2) (+ ny3 1) qx3 qy3)
(distinct_pairs (+ nx3 2) (- ny3 1) qx3 qy3)
(distinct_pairs (- nx3 2) (+ ny3 1) qx3 qy3)
(distinct_pairs (- nx3 2) (- ny3 1) qx3 qy3)
(distinct_pairs (+ nx4 1) (+ ny4 2) qx3 qy3)
(distinct_pairs (+ nx4 1) (- ny4 2) qx3 qy3)
(distinct_pairs (- nx4 1) (+ ny4 2) qx3 qy3)
(distinct_pairs (- nx4 1) (- ny4 2) qx3 qy3)
(distinct_pairs (+ nx4 2) (+ ny4 1) qx3 qy3)
(distinct_pairs (+ nx4 2) (- ny4 1) qx3 qy3)
(distinct_pairs (- nx4 2) (+ ny4 1) qx3 qy3)
(distinct_pairs (- nx4 2) (- ny4 1) qx3 qy3)
(distinct_pairs (+ nx1 1) (+ ny1 2) qx4 qy4)
(distinct_pairs (+ nx1 1) (- ny1 2) qx4 qy4)
(distinct_pairs (- nx1 1) (+ ny1 2) qx4 qy4)
(distinct_pairs (- nx1 1) (- ny1 2) qx4 qy4)
(distinct_pairs (+ nx1 2) (+ ny1 1) qx4 qy4)
(distinct_pairs (+ nx1 2) (- ny1 1) qx4 qy4)
(distinct_pairs (- nx1 2) (+ ny1 1) qx4 qy4)
(distinct_pairs (- nx1 2) (- ny1 1) qx4 qy4)
(distinct_pairs (+ nx2 1) (+ ny2 2) qx4 qy4)
(distinct_pairs (+ nx2 1) (- ny2 2) qx4 qy4)
(distinct_pairs (- nx2 1) (+ ny2 2) qx4 qy4)
(distinct_pairs (- nx2 1) (- ny2 2) qx4 qy4)
(distinct_pairs (+ nx2 2) (+ ny2 1) qx4 qy4)
(distinct_pairs (+ nx2 2) (- ny2 1) qx4 qy4)
(distinct_pairs (- nx2 2) (+ ny2 1) qx4 qy4)
(distinct_pairs (- nx2 2) (- ny2 1) qx4 qy4)
(distinct_pairs (+ nx3 1) (+ ny3 2) qx4 qy4)
(distinct_pairs (+ nx3 1) (- ny3 2) qx4 qy4)
(distinct_pairs (- nx3 1) (+ ny3 2) qx4 qy4)
(distinct_pairs (- nx3 1) (- ny3 2) qx4 qy4)
(distinct_pairs (+ nx3 2) (+ ny3 1) qx4 qy4)
(distinct_pairs (+ nx3 2) (- ny3 1) qx4 qy4)
(distinct_pairs (- nx3 2) (+ ny3 1) qx4 qy4)
(distinct_pairs (- nx3 2) (- ny3 1) qx4 qy4)
(distinct_pairs (+ nx4 1) (+ ny4 2) qx4 qy4)
(distinct_pairs (+ nx4 1) (- ny4 2) qx4 qy4)
(distinct_pairs (- nx4 1) (+ ny4 2) qx4 qy4)
(distinct_pairs (- nx4 1) (- ny4 2) qx4 qy4)
(distinct_pairs (+ nx4 2) (+ ny4 1) qx4 qy4)
(distinct_pairs (+ nx4 2) (- ny4 1) qx4 qy4)
(distinct_pairs (- nx4 2) (+ ny4 1) qx4 qy4)
(distinct_pairs (- nx4 2) (- ny4 1) qx4 qy4)
	
	)






)

(check-sat)
(get-value (qx1 qy1))
(get-value (qx2 qy2))
(get-value (qx3 qy3))
(get-value (qx4 qy4))
(get-value (nx1 ny1))
(get-value (nx2 ny2))
(get-value (nx3 ny3))
(get-value (nx4 ny4))
(exit)
